name: Build geosite.dat
permissions: write-all
on:
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout codebasegrep
        uses: actions/checkout@v3
        with:
          path: code

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: code/go.mod
      - name: update lists
        run: |
          cd code
          echo "downloading from https://raw.githubusercontent.com/filteryab/filteryab/main/iran/blocked-in-iran"
          curl -L -o data/ir-filteryab https://raw.githubusercontent.com/filteryab/ir-blocked-domain/main/data/ir-blocked-domain
          echo "downloading from https://github.com/bootmortis/iran-hosted-domains/releases/latest/download/domains.txt"
          curl -L -o data/ir-iran-hosted-domains https://github.com/bootmortis/iran-hosted-domains/releases/latest/download/domains.txt
          echo "removing .ir domains"
          grep -vE '\.ir$' data/ir-iran-hosted-domains > 'data/ir-iran-hosted-domains-!ir'
          echo "Downloading from https://raw.githubusercontent.com/freedomofdevelopers/fod/master/domains"
          curl -L -o data/ir-sanction-list-fod https://raw.githubusercontent.com/freedomofdevelopers/fod/master/domains
          echo "removing . from ir-sanction-list-fod"
          sed -i 's/^.//' data/ir-sanction-list-fod
          cd ..


          
          
      - name: Set variables
        run: |
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
        shell: bash

      - name: Build geosite.dat file
        run: |
          cd code || exit 1
          go run ./ --outputdir=../ --exportlists=tld-ir,ir,gfw-cn,gfw-ir,sanction-ir,category-ads-all,tld-cn,cn,tld-\!cn,geolocation-\!cn,apple,icloud
          cd ../ && rm -rf code

      - name: Generate geosite.dat sha256 hash
        run: |
          cp dlc.dat geosite.dat
          sha256sum geosite.dat > geosite.dat.sha256sum

      - name: Generate Zip
        run: |
          zip -9 geosite.dat.zip geosite.dat
          sha256sum geosite.dat.zip > geosite.dat.zip.sha256sum

      - name: Generate XZ
        run: |
          xz -z -9 -k geosite.dat
          sha256sum geosite.dat.xz > geosite.dat.xz.sha256sum

      - name: Git push assets to "release" branch
        run: |
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add *.txt *.sha256sum geosite.dat geosite.dat.zip geosite.dat.xz
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Release and upload assets
        run: |
          gh release create ${{ env.TAG_NAME }} --generate-notes --latest --title ${{ env.RELEASE_NAME }} ./geosite.dat ./geosite.dat.* ./dlc.dat
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
